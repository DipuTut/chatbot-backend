name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Frontend Dependencies
      run: |
        cd chatbot-frontend
        npm ci
    
    - name: Build Frontend
      run: |
        cd chatbot-frontend
        npm run build
    
    - name: Test Frontend
      run: |
        cd chatbot-frontend
        npm test
    
    - name: Install Backend Dependencies
      run: |
        cd chatbot-backend
        npm ci
    
    - name: Test Backend
      run: |
        cd chatbot-backend
        npm test
    
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin your-ecr-repo

    - name: Deploy Frontend to S3
      run: |
        cd chatbot-frontend
        npm ci
        npm run build
        aws s3 sync build/ s3://your-s3-bucket-name --delete

    - name: Deploy Backend to ECS
      run: |
        cd chatbot-backend
        docker build -t your-ecr-repo:${{ github.sha }} .
        docker push your-ecr-repo:${{ github.sha }}
        aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment --region eu-central-1

    - name: Deploy to Azure
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      run: |
        export CLIENT_ID=$(echo $AZURE_CREDENTIALS | jq -r .clientId)
        export CLIENT_SECRET=$(echo $AZURE_CREDENTIALS | jq -r .clientSecret)
        export TENANT_ID=$(echo $AZURE_CREDENTIALS | jq -r .tenantId)
        az login --service-principal -u $CLIENT_ID -p $CLIENT_SECRET --tenant $TENANT_ID
        az cognitiveservices account update --name chatbot-text-analytics --resource-group chatbot-resources --sku S0
